program: tdmpc2/train.py
method: grid
command:
  - ${env}
  - python
  - ${program}
  - ${args_no_hyphens}
metric:
  name: eval/episode_reward
  goal: maximize
parameters:
  task:
    values: 
      # - cartpole_balance
      # - cartpole_balance_sparse
      # - cartpole_swingup
      # - cup_catch
      - finger_spin
      - reacher_easy
      - reacher_hard
      # - walker_stand
      - walker_walk
      # - hopper_stand
      # - hopper_hop
      - cheetah_run
      - acrobot_swingup
      # - cartpole_swingup_sparse
      - finger_turn_easy
      - finger_turn_hard
      - quadruped_walk
      # - quadruped_run
      - walker_run
  obs:
    values: [rgb]
  seed:
    values: [102, 203, 304]

  ac_source:
    values: [replay_rollout]
  actor_source:
    values: [ac]
  aux_value_source:
    values: [replay_rollout]
  pred_from:
    values: [rollout]
  buffer_update_interval:
    values: [-1]

  multi_gamma_head:
    values: [separate]
  multi_gamma_gammas:
    values:
      # - [0.97]
      - [0.8]
      - [0.95]
      - [0.8, 0.95]
      # - [0.9, 0.95]
      # - [0.8, 0.9, 0.95, 0.97]
  multi_gamma_loss_weight:
    values: [0.1]

  steps:
    value: 1000000
  eval_freq:
    value: 25000
  model_size:
    value: 5

  enable_wandb:
    value: true
  wandb_project:
    value: tdmpc2-tdmpc2
  wandb_entity:
    value: thomasevers9
  save_video:
    value: false

  compile:
    value: true